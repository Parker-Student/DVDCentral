@model PF.DVDCentral.MVCUI.ViewModels.MovieGenresDirectorsRaitingsFormats

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<p class="text-danger">@ViewBag.Message</p>
@*@using (Html.BeginForm("Edit", "Movie", FormMethod.Post, new { enctype = "multipart/form-data" }))*@

@using (Html.BeginForm("Update", "Movie", FormMethod.Post, new { enctype = "multipart/form-data" }))

{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Movie.Id)
    <div class="form-group">
        @Html.LabelFor(model => model.Movie.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Movie.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Movie.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Movie.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Movie.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Movie.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Movie.InStockQty, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Movie.InStockQty, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Movie.InStockQty, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Movie.ImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <img src="~/images/@Model.Movie.ImagePath" id="programimage" class="imagepropmed" alt="@Model.Movie.Description" onclick="on('/images/@Model.Movie.ImagePath');" /> <br /><br />
            <input type="file" name="File" id="File" accept="image/*" onchange="loadFile(event)" />
            @Html.ValidationMessageFor(model => model.Movie.Id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Movie.Director, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.Movie.DegreeTypeId, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.DropDownListFor(model => model.Movie.Director, new SelectList(Model.Directors, "Id", "FullNameFirst", Model.Directors), null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Movie.Director, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Genres, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.Movie.DegreeTypeId, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.DropDownListFor(model => model.Genres, new SelectList(Model.Genres, "Id", "Description", Model.Genres), null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Genres, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Movie.RatingsId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.Movie.DegreeTypeId, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.DropDownListFor(model => model.Movie.RatingsId, new SelectList(Model.Movie.Rating, "Id", "Description", Model.Movie.RatingsId), null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Movie.RatingsId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Movie.Format, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.Movie.DegreeTypeId, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.DropDownListFor(model => model.Movie.Format, new SelectList(Model.Movie.Format, "Id", "Description", Model.Movie.Format), null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Movie.Format, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Movie.Cost, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Movie.Cost, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Movie.Cost, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default btn-outline-primary" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
    var loadFile = function (event) {
        var output = document.getElementById('programimage');
        console.log(event.target.files[0].name);
        output.sec = URL.createObjectURL(event.target.files[0])
    }
</script>

@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@


